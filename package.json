{
    "name": "vibrations",
    "version": "1.1.0",
    "description": "A minimal soundmap",
    "repository": {
        "type": "git",
        "url": "https://github.com/schwartzman/vibrations"
    },
    "author": "Anthony Schwartzman",
    "license": "MIT",
    "dependencies": {
        "page": "^1.8.6"
    },
    "devDependencies": {
        "autoprefixer": "^8.6.4",
        "babel-core": "^6.26.3",
        "babel-preset-env": "^1.7.0",
        "babelify": "^8.0.0",
        "browserify": "^16.2.2",
        "node-sass": "^4.9.0",
        "normalize.css": "^8.0.0",
        "postcss-clean": "^1.1.0",
        "postcss-cli": "^5.0.1",
        "scut": "^1.4.0",
        "uglify-js": "^3.4.2"
    },
    "scripts": {
        "serve": "python reload.py",
        "watch:style": "watch 'npm run build:scss' static/scss",
        "watch:script": "watch 'npm run build:script-dev' static/js",
        "watch": "parallelshell 'npm run watch:scss' 'npm run watch:script'",
        "build:css": "postcss node_modules/normalize.css/normalize.css --use postcss-clean --no-map --dir static/css",
        "build:scss": "node-sass --output-style compressed static/scss/main.scss | postcss --use autoprefixer --no-map -o static/css/main.css",
        "postbuild:scss": "cat static/css/normalize.css static/css/main.css > static/dist/main.css",
        "build:script": "browserify static/js/main.js --transform [babelify --presets env] | uglifyjs --compress --mangle -o static/dist/main.js",
        "build:script-dev": "browserify static/js/main.js --transform [babelify --presets env] -o static/dist/main.js",
        "build:bust": "git rev-parse HEAD | cut -c 1-8 > revision.txt",
        "build": "npm run build:css && npm run build:scss && npm run build:script && npm run build:bust",
        "deploy:lambda": "zappa update production",
        "deploy:s3": "aws s3 sync static s3://vibrations.earth-static/static --exclude scss/* --exclude css/* --exclude js/*",
        "deploy": "npm run deploy:lambda && npm run deploy:s3",
        "ship": "npm run build && npm run deploy",
        "postinstall": "npm run build:css"
    }
}
